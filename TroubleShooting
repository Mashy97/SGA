Troubleshooting
교육, 개발 도중 발생한 문제점, 해결 방법 작성
/* TroubleShooting 양식
1. 문제 내용
2. 문제 발생 일자, 문제 해결 일자
3. 문제 예상 해결 방법
4. 문제 해결 방법
5. 결과
*/

// Project TroubleShooting
PT2. 
1) Charater Animation 출력 오류
Mixamo에서 다운 받은 Character Animation을 적용시 정상적으로 출력되지 않는 현상
2) 문제 발생 일자 : 2024.07.16 // 문제 해결 일자 : 2024.07.16
3) Charater Animation의 스켈레탈 메시의 변경이 원인으로 예상
4) 기존에 있던 스켈레탈 메시인 Manny와 모션 매칭이 안되어 있어 발생하는 오류
   Charater Retargeting을 하여 Manny의 모션을 다시 조정
      a) Character Retargeting 후 애니메이션 익스포트
5) Retarget 후 정상적으로 Animation이 작동하는 것을 확인

PT1. 
1) Zipline 기능 구현 오류
Zipline 키 입력 시 Sphere End의 좌표가 아닌 ( 0, 0, 0 )로 이동하는 현상
2) 문제 발생 일자 : 2024.07.15 // 문제 해결 일자 : 2024.07.16
3) Zipline의 Sphere End의 좌표 값의 이상 또는 중간 과정에서 Zipline 기능이 끝나는 좌표 이상
4) Sphere End의 좌표 값의 이상이 있는 것을 확인 후 수정
   Sphere End의 좌표의 기준이 Zipline 아닌 World 좌표로 설정되어 있었음
      a) Sphere End 좌표 수정
5) Zipline 실행 시 Sphere End 좌표로 이동하는 것을 확인


// 
T1.
1) 블루 프린트 - 키입력 
레벨 블루프린트에서는 키 입력 부분이 정상 작동하지만 Actor 블루프린트에서는 키 입력 부분이 정상적으로 작동하지 않는 현상 발생
2) 문제 발생 일자 : 2024.06.04 // 문제 해결 일자 : 2024.06.05
3) 레벨 부분에서 설정한 키 입력 부분이 Actor에 전달되지 못하여 발생하는 문제로 예상됨
4)    a) Actor - Detail 입력 부분의 Auto receive input - Disable을 player 부분으로 수정 // player0, player1 ...
      b) Actor 블루 프린트 화면에서 Get Player Controller을 생성하여 player 입력
5) Actor에서 키 입력을 하였을 때 정상적으로 작동하는 것을 확인

//
T2.
1) C++ 컴파일 파일 - UserWidget
MyuserWidget.cpp 파일의 MyUserWidget을 출력하는 코딩 후 Unreal Engine에서 컴파일 시 오류 발생
2) 문제 발생 일자 : 2024.06.19 // 문제 해결 일자 : 2024.06.20
3) cpp 파일에서 MyUserWidget을 가져오지 못해서 발생하는 문제로 예상됨
4)    a) build 파일의 ModuleRules에 PublicDependency - UMG 추가
      b) ModulRules에 PrivateDependency - Slate, SlateCore 추가
	PublicDependencyModuleNames.AddRange(new string[] { "Core", "CoreUObject", "Engine", "InputCore", "HeadMountedDisplay","UMG" });
     	PrivateDependencyModuleNames.AddRange(new string[] { "Slate", "SlateCore" });
5) MyUserWidget을 정상적으로 출력하는 것을 확인

//
T3.
1) 공격 모션 출력 오류 - Flipbook
공격 모션 출력 시 공격 모션이 나오지 않는 오류 발생
2) 문제 발생 일자 : 2024.06.24 // 문제 해결 일자 : 2024.06.25
3) 공격 모션 출력 시 이동 Set Char Rotate가 설정되어 공격 모션이 없어지는 문제로 예상 
4)    a) Set Char Rotate 이후 Branch를 연결하여 공격이 활성화 되어 있다면 이동 모션을 출력하지 않도록 설정
5) 설정 이후 정상적으로 공격모션이 출력되는 것을 확인이 가능하다.

//
T4.
1) C++ 컴파일 오류 - include 파일 오류
#include 에서 EnhancedInputComponent.h, InputActionValue.h 등 include 파일을 찾을 수 없다고 표시되는 오류
2) 문제 발생 일자 : 2024.06.26 // 문제 해결 일자 : 2024.06.26
3) Enhanced를 연결하는 파일을 찾지 못하여서 생기는 오류로 예상된다.
4)    a) Build.cs 파일에서 EnhancedInput 추가하여 Unreal - Enhance 플러그인 활성화 및 Header 가져오기
      b) Unreal 화면에서 툴 - Visual Studio 프로젝트 새로고침을 클릭하여 Header 활성화 확인
      c) Unreal C++ Code Compile 하여 정상 작동 확인
5) #include EnhancedInputComponent 및 InputActionValue가 파일을 정상적으로 인식하는 것을 확인

T5.
1) MovementInput 속도 
MovementInput.SizeSquared() 사용하여 Pawn의 속도를 출력하는 과정에서 0으로 고정되는 현상
2) 문제 발생 일자 : 2024.06.27 // 문제 해결 일자 : 2024.06.28
3) 속도를 구하는 명령어가 SizeSquared가 아닌 다른 명령어로 예상된다
4) MovementInput의 SizeSquared()이 아닌 GetVelocity의 SizeSquared()를 사용하여 플레이어의 이동 속도를 계산한다.
      a) GetVelocity()를 사용하여 플레이어의 Velocity 값을 PlayerVelocity에 저장한다.
      // const FVector PlayerVelocity = GetVelocity();
      b) PlayerVelocity.SizeSquared()로 플레이어의 이동 속도를 계산
      // const float PlayerSpeedSqr = PlayerVelocity.SizeSquared();
5) Velocity의 SizeSquared를 사용하여 이동속도가 0보다 클 경우 BP_Char_Run Sprite를 아닌 경우 BP_Char_Idle Sprite 출력이 정상적으로 작동하는 것을 확인

T6.
1) PaperZD // PaperZDAnimationComponent 오류
PaperZDAnimationComponent를 컴파일 완료 후 BP_Char에 적용되지 않는 오류
2) 문제 발생 일자 : 2024.07.02 // 문제 해결 일자 : 2024.07.03
3) uProject에 PaperZD를 늦게 프로젝트에 적용하여 생기는 문제로 예상
4) PaperZD를 프로젝트 및 build에 적용 후 New Character를 생성하여 해결 
      a) PaperZD를 install 후 Character 생성
        // PaperZD가 적용되기 전의 생성한 Character에 PaperZD를 추가하면 확률적으로 발생하는 문제 
5) PaperZD를 build 후 생성한 Character에서는 컴파일 후 정상적으로 PaperZD가 적용된 것을 확인 가능하다.


T7.
1) Unreal GameMode UI // 
C++ 코드에서 GameMode Default Pawn, Player Controller 변경 & 컴파일 후 GameMode 확인 시 Unreal UI에 변경되지 않는 현상 
2) 문제 발생 일자 : 2024.07.04 // 문제 해결 일자 : 2024.07.04
3) 수정된 코드로 정상적으로 작동 하나 UI 부분에서 오류가 있어 UI 업로드 부분 문제로 예상
4) C++ 컴파일 시 header 파일에 변화가 없다면 UI 부분도 마찬가지로 변화가 없어 header 파일에 주석, 수정을 통하여 컴파일
      a) cpp 파일 수정 후 header 파일에 수정, 주석을 추가하여 Unreal에 컴파일 진행
5) header 파일을 수정하여 컴파일시 정상적으로 UI가 변하는 것을 확인
