// 24.05.22 Day23
// SGA C++ unreal class
// visual studio 2022

  서버 - Server
	1. 패치 서버
		- 게임의 버전을 관리하여 클라이언트의 버전을 최신으로 유지하는 역할
		- 만약 패치 서버가 없다면 유저 스스로 버그를 패치해야하며, 개발 업체 입장에서는 다른 버전의 클라이언트가 서버에 영향을 주어 문제 발생 우려가 있다.
	2. 인증 서버
		- 유저의 인증과 중복 접속 체크 역할을 한다.
		- 유저의 인증을 수행하는 서버, 유저의 계정을 통해 유저를 구분한다.
		- 인증 서버를 통하여 유효성 검사를 받은 후 접속이 가능하며 중복하여 접속할 수 없도록 접속 유무를 검사한다.
	3. 로비 서버
		- 게임 서버에 사용되는 유저의 캐릭터를 생성, 삭제, 선택이 가능하게 하는 역할을 한다.
	4. 게임 서버
		- 게임을 진행하는 역할을 한다.
		- 유저가 선택한 캐릭터로 게임을 즐길 수 있는 공간을 마련해 주는 서버
		- 가장 복잡하지만 최고의 성능과 견고함으로 구성해야한다.
	5. NPC 서버
		- NPC의 인공 지능 부분을 따로 분리하여 게임 서버에서 부하를 줄이는 역할을 한다.
		- 구성에 따라서 게임서버에 많은 부하를 줄 수 있는 서버이며 그 이유로는 NPC의 인공지능을 구성하는 코드는 복잡하며 처리량도 많기 때문이다.
	6. 동기화 서버
		- 동기화 : 제한된 공간에서 유저의 행동을 상호간에 인지시키는 작업, 게임 서버가 시작되고 유저가 접속하며 시작된다.
		- PC/NPC 간의 동기화 작업은 각각의 단위로 이루어지기 때문에 동기화 서버를 따로 두어 캐릭터의 동기화 부분만 전담하도록 부하를 시키는 구조를 택할 수 있다.
	7. 채팅 서버
		- 유조 간의 액션 및 채팅을 관리하는 역할을 한다.
		- 채팅 메세지는 유저간의 동기화 문제와도 연관되어 많은 부하를 발생시킬 수 있기 때문에 채팅 서버를 따로 두어 게임 서버의 부하를 분산시킨다.
	8. 분산 게임 서버
		- 동기화 전문 서버를 1대를 두고, 이곳에 여러 대의 동일한 맵 서버를 연결하여 부하를 분산시켜 주는 구조를 가지고 있다.
	
  디자인 패턴
	1. 중앙 집중식 인증 구조 
	2. 분산식 인증 구조
