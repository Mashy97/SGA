// 24.04.12 Day3
// SGA C++ unreal class
// https://www.programiz.com/cpp-programming/online-compiler/

#include <iostream>

int main() {

    // for 문을 사용하여 모양 만들기 예제
    // 역삼각형 만들기
    int num = 5;

    for(int i = 0; i < num; i++){
        for(int j = num; j > i; j--){
            printf("*");
        }
        printf("\n");
    }

    // 삼각형 만들기 #1
    for(int i = 0; i < num; i++){
        for(int j = 0; j < i+1 ; j++){
            printf("*");
        }
        printf("\n");
    }

    // 삼각형 만들기 #2
    for(unsigned int i = 4; i < num; i--){
        for(int j = num; j > i; j--){
            printf("*");
        }
        printf("\n");
    }

    // 피라미드 모양 만들기
    for (int i = 0; i < 4; i++) {
		  for (int j = i; j < 4 + 1; j++) {
		  	printf(" ");
	  	}
	  	for (int k = 0; k < i * 2 + 1; k++) {
		  	printf("*");
	  	}
			printf("\n");
  	}

    // 마름모 모양 만들기
  	for (int i = 0; i < 5; i++) {
  		for (int j = i; j < 4; j++) {
  			printf(" ");
  		}
  		for (int k = 0; k < i * 2 + 1; k++) {
  			printf("*");
  		}
  		printf("\n");
  	}
  	
  	for (int i = 0; i < 4; i++) {
  		for (int j = 0; j <= i; j++) {
  			printf(" ");
  		}
  		for (int k = 7; k > 0; k--) {
  			printf("*");
  		}
  		printf("\n");
  	}
    
    // getchar()를 이용한 문자 입력 예제
    // 키 입력 하였을 때 입력한 키 표시
    while (1) {

		char num;
		printf("num 값을 입력하시오( exit : x ) : ");
		num = getchar();

		if (num == '\n') {	// 공백 및 연속 입력 방지
			continue;
		}
		else {
			getchar();
		}

		if (num == 120) {
			printf("키보드 %c키를 입력하였습니다.\n종료합니다.", num);		
			break;
		}
		else{
			printf("키보드 %c키를 입력하였습니다.\n", num);
		}	
	}

  // 배열 선언 및 간단 예제
	int num1 = 10;
	int num2 = 20;
	int num3 = 30;
	int num[3] {}; // num[0], num[1], num[2] 선언

  int array[3][3] = {
  	{1,2,3},
  	{4,5,6},
  	{7,8,9} 
  };

  // 배열에 값 대입
	num[0] = num1;  
	num[1] = num2;
	num[2] = num3;  //  int num[3] = {10, 20, 30}; 

	printf("%d %d\n", num1, num[0]);
	printf("%d %d\n", num2, num[1]);
	printf("%d %d\n", num3, num[2]);

  int num[3] = {10, 20, 30};

  // 배열과 for문 예제 1
  // for문을 사용하여 배열의 값 입력 및 변경
  // const = 상수 읽수
  const int count = 10;
  
  int num[count]{};
  
  for (int i = 0; i < count; i++) {  // 
  	num[i] = 10 * i;
  	printf("num[%d]=%d\n", i, num[i]);
  }

  // 배열과 for문 예제 2
  // for문을 사용하여 이중 배열의 값 입력 및 변경
  for (int i = 0; i < 3; i++) {
  	for (int j = 0; j < 3; j++) {
  		array[i][j] = i * j;
  		printf("array[%d][%d] = %d\n", i, j, array[i][j]);
  	}
  }

  // 구조체 
  // 사용자가 원하는 자료형으로 만들어 사용 가능
  // 자주 사용하는 구조를 선언하여 필요시 사용
  // struct 선언
  struct sPerson {
  std::string name;
  bool gender;
  int age;
  };

  // struct 변수 설정
  sPerson man[10];

  // struct 변수 값 입력
  man[0].name = "name_1";
  man[0].gender = 0;
  man[0].age = 20;
  
  man[1].name = "name_2";
  man[1].gender = 1;
  man[1].age = 20;

  // struct 출력 
  printf("Name : %c, Gender : %b, Age : %d\n", man[0].name, man[0].gender, man[0].age);
  printf("Name : %c, Gender : %b, Age : %d\n", man[1].name, man[1].gender, man[1].age);

  // 5개의 숫자 입력
  // 추가로 숫자를 입력받아 겹치는 숫자가 있는지 확인
  // 겹친 숫자의 갯수 확인
  int num[5];
	int num2[5];
	int a;
	int count_num = 0;

	printf(" 5개의 숫자를 입력하세요 : ");
	for (int i = 0; i < 5; i++) {      // num[]의 값 입력
		scanf_s("%d", &num[i]);  
		printf("num[%d] = %d\n", i, num[i]);
	}

	printf(" 추가로 5개의 숫자를 입력하세요 : ");
	for (int i = 0; i < 5; i++) {       // num2[]의 값 입력
		scanf_s("%d", &num2[i]);
		printf("num [%d] = %d\n", i, num2[i]);
	}


	for (int i = 0; i < 5; i++) {
		for (int j = 0; j < 5; j++) {
			if (num[i] == num2[j]) {    // 만약 겹치는 숫자가 있다면 
				count_num++;              // count_num 1 증가
			}
		}
	}

	printf("같은 숫자는 %d개 입니다.", count_num);
  
  return 0;
}
