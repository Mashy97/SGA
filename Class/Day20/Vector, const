// 24.05.14 Day20
// SGA C++ unreal class
// visual studio 2022

vector - 배열 형태
동적 배열을 할당하는 클래스

vector 예시)
std::vector<int> myVector(2);
myVector[0] = 1;
myVector[1] = 10;

// vector 사이즈 확인 - .size();
std::cout << "myVector.size() = " << myVector.size() << std::endl;

// push_back을 사용하여 요소 추가
myVector.push_back(5);

// pop_back을 사용하여 요소 삭제 - 맨 끝(뒤)에 있는 데이터부터 삭제
myVector.pop_back();

// .at() - 배열에서 인덱스로 값을 가져오는 명령어
int value = myVector.at(0); // myVector[0] 값 

// .data() - 해당 vector의 값을 가져오는 명령어
int value1 = myVector.data();

============================ const =============================
Const - const_cast 이외의 수정 불가능
const 예시)
std::vector<int> myInt(6);
myInt[0] = 1;
myInt[1] = 10;

const int* cInt = myInt.data();  // cInt - const 지정
*(cInt + 0) = 500;      // 오류 - const로 지정된 값은 const_cast이외의 방법으로 수정이 불가능

const_cast - const로 지정된 값을 수정이 가능하다
const_cast 예시) 
int* ptr = const_cast<int*>(cpInt);	// ptr이 cpInt를 수정이 가능하도록 const_cast로 정의
*(ptr + 0) = 800;		// 정상 작동 
