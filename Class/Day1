// 24.04.09 Day1
// SGA C++ unreal class
// https://www.programiz.com/cpp-programming/online-compiler/

#include <stdio.h>
// stdio.h header를 가져온다
// 원하는 기능일 포함한 header를 가져올 수 있음
// header 란? 자주변경되지 않는 긴소스를 미리 컴파일하여 컴파일결과를 별도의 파일에 저장하여 컴파일 속도 향상
int main() {
    // C 기본 명령어
    printf("한글 입력\n");        // \n 줄 바꿈  
    printf("%d\n",123);          // %d 정수형 표현
    printf("%d\n",-12342222);    // %d 범위( 32bit = 2^32 ) " -2,147,483,648 ~ 2,147,483,647 " 
    printf("%s  \n  %s", "한글","입력"); // %s 문자형 표현

    /* 8bit = 1byte 
       int : 정수형 표현
       unsigned int : 양수만 표현 " 0 ~ 4,294,967,295 "
       float : 실수형 표현
       string, char : 문자형 표현
       ( wstring )
    */

    printf("%d", 2147483647);
    printf("%s", "gksrmf 한글");

    // 정수형 변수 선언
    int number;      // 정수현 변수 선언
    number = 1000;    // 100을 변수에 대입
    printf("%d", number); // 정수형 변수 값 출력

    // 정수형 변수(int) 사칙연산
    // +, -, *, /
    // +=, -=, *=, /=
    int number1 = 100;    // 정수형(int) 변수 선언
    printf("%d", number+number1);    // int형 변수 출력 
    printf("1000 + 100 = %d",number+number1);

    printf("%d + %d = %d\n",number, number1, number+number1);    // + 더하기
    printf("%d - %d = %d\n",number, number1, number-number1);    // - 빼기
    printf("%d * %d = %d\n",number, number1, number*number1);    // * 곱하기
    printf("%d / %d = %d\n",number, number1, number/number1);    // / 나누기

    // 실수형 변수(float) 사칙연산
    float fnumber = 500.5f;
    printf("%f", fnumber + number1);    // %f 소숫점까지 출력
    printf("%.2f", fnumber + number);   // %.2f .을 붙여 원하는 소숫점 자리까지 표현 ( 이전 자리는 반올림 ) 
    printf("%f + %d = %f\n",fnumber, number1, fnumber+number1);    // + 더하기
    printf("%f - %d = %f\n",fnumber, number1, fnumber-number1);    // - 빼기
    printf("%f * %d = %f\n",fnumber, number1, fnumber*number1);    // * 곱하기
    printf("%f / %d = %f\n",fnumber, number1, fnumber/number1);    // / 나누기
    // int 변수에 %f 또는 float 변수에 %d를 사용한다면 정확한 값이 출력되지 않음 

    // 문자형(String) 변수 선언
    char str = 'a';
    char str1 = 'b';

    /* 조건문
       조건에 따라 동작을 할 경우 사용
       if() , else if(), else()
       비교문
       ==, <=, >=, !=
       논리 연산자
       &&, ||, != 
    */
    int idiv = number % 3;
    if ( idiv == 0)    // 조건의 참 거짓 확인
    {    // 조건이 참일 경우
        printf(" 나머지가 0입니다.");    // idiv가 0이라면 실행
    }
    else
    {    // 조건이 거짓일 경우
        printf("나머지가 0이 아닙니다.");    
    }
    
    /* 반복문
       반복적인 동작을 할 경우 사용
       for ( 시작, 종료, 증가 )
       while()
       swich()
    */

    // for문 테스트
    for(int i = 0; i<10; i++ ) // i는 0으로 시작, i가 10보다 낮을 경우 반복
    {                          
        printf("i= %d\n", i);  // i++로 i의 값이 1 증가
    } 

    // while문 테스트
    int j;
    while( j < 5)    // j 가 5보다 적을 경우 사용
    {
         printf(" j= %d\n" , j);
         j++;        // printf 출력 후 j++로 j의 값이 1 증가 
    } // while 문은 한번 이상 작동해야할 경우 사용한다.
      // break을 사용하여 while문을 종료가 가능하다.

    //while, switch 활용
    int k = 0;
    while(k<5){
    
        switch(k){
            case 0:
            {
                printf("k = %d 입니다.\n", k);
            }
            break;
            case 1:
            {
                printf("k = %d 입니다.\n", k);
            }
            break;
            case 2:
            case 3:
            {
                printf("k = 2 또는 3 입니다.\n");
            }
            break;
            default:
            {
                printf("default값 입니다.\n");
            }
            break;
        }
        k++;
    }
    return 0;
}













